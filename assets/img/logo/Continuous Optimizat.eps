%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14 (Build 18A389) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 825 334
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 825 334
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: IBHDBR+LucidaGrande
%!FontType1-1.0: IBHDBR+LucidaGrande 1.0000.6.0040
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
14 dict begin/FontName /IBHDBR+LucidaGrande def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /C put
dup 34 /o put
dup 35 /n put
dup 36 /t put
dup 37 /i put
dup 38 /u put
dup 39 /s put
dup 40 /space put
dup 41 /O put
dup 42 /p put
dup 43 /m put
dup 44 /z put
dup 45 /a put
dup 46 /e put
dup 47 /M put
dup 48 /d put
dup 49 /l put
dup 50 /w put
dup 51 /h put
dup 52 /three put
dup 53 /six put
dup 54 /zero put
dup 55 /ordmasculine put
dup 56 /F put
dup 57 /b put
dup 58 /c put
dup 59 /k put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -2186 1 index div -1509 2 index div 3361 3 index div 2381 5 -1 roll div]cvx def
/sfnts [<



2121591B212121592D2CB00243583DCD181BCD592D2C462346608A8A462320468A608A61B8FF8062232010238AB10C0C8A70456020B0005058B00161B8FFBA8B1BB0468C59B0106068013A2D2C2045B0032546524BB013515B58B0022546206861B00325B003253F2321381B2111592D2C2045B00325465058B0022546206861B00325B003253F2321381B2111592D2C004BB0C8515800B00743B006430B592D2C8A10EC2D2CB00C4358211B2046B0005258B8FFF0381BB0103859592D2C20B0005558B8100063B003254564B00325456461B0005358B0021BB04061B00359254569535845441B2121591B21B0022545B00225456164B028515845441B212159592D2C21210C6423648BB84000622D2C21B08051580C6423648BB82000621BB200402F2B59B002602D2C21B0C051580C6423648BB81555621BB200802F2B59B002602D2C0C6423648BB84000626023212D2C184B5358B00425B00425496423456469B0408B6120B080626AB00225B00225618CB00C2344218A10B00CF6211B218A11231220392F592D2CB00225B002254964B0C05458B8FFF838B008381B2121592D2CB0134358031B02592D2CB0134358021B03592D2CB00A2B2310203CB0172B2D2CB00225B8FFF038B0282B8A102320D023B0102BB0054358C01B3C59201011B00012012D2C4B53234B515A58381B2121592D2C01B0022510D023C901B00113B0001410B0013CB001162D2C01B00013B001B0032549B0031738B001132D2C4B53234B515A5820458A60441B2121592D2C184B5358B00425B004254964B00325B00325496468B0408B6120B080626AB00225B00225618CB00C234421B004251023B00CF61BB00425B0042511122320392F59CC21212D2C0118B0184358B0052546234564611B21B00425B004254A59B00E23442310B00EEC2310B00EEC2D2CB01B435820B0016045B000515820B0016020452068B0005558B0206044211B212121591B20B0016020452068B0005558B8FFE06044B01C4B50582045B02060441B21591B21212159591B21592D2C4B53234B515A58381B2121592D2C4B5458381B2121592D2C4B52587D1B7A592DB800532C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800542C2020456944B001602DB800552CB800542A212DB800562C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800572C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800582C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800592C2020456944B001602020457D691844B001602DB8005A2CB800592A2DB8005B2C4B20B00326





8DA8C54752B5A0062BFD47E4B397FCF402CC7967EDFD4100000200C50000018A05C80003000700254013049E0503010F000704038500400809008530302B011A18104DED3939002F3F3FED31303311331103353315C5C5C5C5043EFBC20503C5C5000000000100C500000485062B000A00B3407A0A061A062A06030A031A032A03030A061A062A06030A091A092A09030C0D061D062D06030D091D092D09030D031D032D03030601520607040304880506140505060601520605080908870706140707060308090300040F0100000609000510052005030F05070710030985004000070111030C076A020B0065022B2B015F5E5D1A18104DED323810C65E5D1139002F3F3F12173931308705102B87082BC4870518102B87082BC4005D5D5D5E5D5D5D015D3311331101330901230111C5C501CCD4FE490212FCFE01062BFC04020FFE05FDBD022DFDD30000000100C50000018A062B0003001B400D010000038500400405008530302B011A18104DED002F3F313033113311C5C5062BF9D500000100C5000006BF0457001B00E940460404010408011A1001FA10011A1701FA17012A123A12022A193A1902391301A113B113C113E11304391A01A11AB11AC11AE11A0405070175079507A507C507E5070573030103B8FFD8405E1215480606014606560602060A01360A460A0226087608021604260476049604B60405F70B01F70601119509101896180711131A05030510010F150E000E850D031B8500400F0D0100000109031500140D653B07148515401C1D15853C302B011A18104DED322B015F5E5D5D1A18104DED3210ED002F33333F3F111733ED3FED3130015D5D005D5D5D715D712B5D5D715D715D7171715D715D715D5D33113315363332173633321615112311342322071123113423220711C5C590E2DA4F8CE0909EC69399A8C69695AA043ECCE4E4E5A998FCEA02F7BAD9FD2802F7BBDAFD2800000100C50000043D0456001100784053B90F01A910012D0F3D0F4D0F7D0F8D0F9D0F06770701D707E70702DB0DEB0DFB0D030D201A1D48180E0104061406240603090003100302100310030E950510010F0A000A8509031185004013096802120065022B2B011A18104DED3210ED002F2F3F3FED32325F5E5D31305E5D712B5D5D717171015D331133153633321615112311342623220711C5C59CE28DA8C54752B5A0043ECCE4B397FCF402CC7967EDFD4100000002006FFFE7047B0456000B001300D040981A0E2A0E021813281302070C01270701170527050218012801021801280102280B880B0208109810020C0D0A1D0A020D0A1D0A2D0A03020812080202081208220803020412042204030D5502010D021D02020E0A0B010A07010505010501010C0D010313010311010C0F011603100A200A0210082008021F042F04020012


C96E868684848585858500000002006FFFE70425062B0022002E00F7B800712BBA0026001A00742BBA000E002C00742BB8000E10B80003DCB8001A10B80014D0B800142FB8000E10B80008D0B800082FBA000500140008111239BA001D00140008111239411B0006002600160026002600260036002600460026005600260066002600760026008600260096002600A6002600B6002600C60026000D5D410500D5002600E5002600025DB8002610B8001FD0B8001F2F410500DA002C00EA002C00025D411B0009002C0019002C0029002C0039002C0049002C0059002C0069002C0079002C0089002C0099002C00A9002C00B9002C00C9002C000D5DB8000E10B80030DC00B800052FBA0029001100742B3031013700353427331615140107171615140423222435343F012726353437330615141617130706151416333236353427023F33010837BF23FED94170F0FEF4D3CAFEFBF33F4AE61FC019587B1340A9A2737099D303D13201009F4049423DD4FEE13F5FCABFBCEFDFACC2E13A38B294364A34273C6A56FEFD3DA0936E9A8A6690A90000010000000601065DF3FBED5F0F3CF5011B080000000000B47FC3BC00000000D56A2B41F776FA1B0D21094D0000000900010000000000000001000007BCFE5000000D1EF776F7430D2100010000000000000000000000000000001D0600010002880000050F0082050F00D0050F008905890068044A00BF06E400BF06370068046B0067050900C50419006F0509006F0475006F04F700C5025000C504AD00C5025000C5077800C504F700C504EA006F050900C50414009D02FE004504F700B9062A000C0496007B03C2007B0493006F000000200020009E015A020802A002D6037A043004E80590061C06C4076407C807EE0862087C091A09740A060A980B4A0BA20C0E0CF40D540DC20E8600010000001D0077000F004F0007000100100030007B000005E00D3300030001B800712BB800672BB8005D2BB800532B410E00000246001002460002007F02440001023F023C0001002B023E023CB2012BEFBB023D0001023D023CB2141F00BD023C0010023C000201870188B21A1F40B80189B310163900410E0188001001880002018301850002002B018401850002002B01860185B2022B80BB017F000100DF017C406601DFE016171CD4D516171C7B7C161B0F7B1F7B2F7B037B7C19D1D216171C767716171C6D7016171C6C6F16171C6B6E161B5F6E7F6B026B6E7F721A747514151C676A14151C666914151C6568141B8F65A065D06503656885711A1973167A4319217943192102B90352034AB2022B10BD034600500346000200400339B20B0E39B9FFC00338B20E0E39B9FFC00338B3090C3950410B032D0001033003310003002B02F402F30008002B02E3B2BE022BB802DCB3BE641F40B802DBB3



00>] def
/CharStrings 29 dict dup begin
/.notdef 0 def
/space 1 def
/zero 2 def
/three 3 def
/six 4 def
/C 5 def
/F 6 def
/M 7 def
/O 8 def
/a 9 def
/b 10 def
/c 11 def
/d 12 def
/e 13 def
/h 14 def
/i 15 def
/k 16 def
/l 17 def
/m 18 def
/n 19 def
/o 20 def
/p 21 def
/s 22 def
/t 23 def
/u 24 def
/w 25 def
/z 26 def
/ordmasculine 27 def
/ukcyrillic.alt 28 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-2186 -1509 3361 2381}def
/UniqueID 4261101 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C926BAEAB28275C745AF1AE9BF51BC067C3C015CE8D2E034177832EFBD48E95BD7DED627E4351F3789F902495C64B851A13C0281A27D1502413D59F4930B97DA5F5C95886E7A9809401A2965F1E8FF0D2A5AC7B260AF3C87E0B78082FA5EE28542EF71A5F1DFA12C6D0CC91879AE2DE6AED1D4D2881F55C8FF1A31AA3595ED9577898127CBCD1C84741E40709D89E3A15955313E4CC59B8F0826A5FCF278195D3115D7E244C0D9C4128DB11796F13BF15E4E1D2726BE3F111F52477DDB99EB41E6BF438961D3455579CC6A6855F83622E9D9F203F5DB53173C7FEB9D76C3ADBD2B0DE5ED58840089678CB1CC97ABC70A606707300CE210F3C07AA743AE8BE103501D82A46534D2997139FB6F7B74E1A93B486337A59DD99EFCC92F6EFCE6AF1F0FF69C78471C5AF6E1BC55F2DBC9E719916046EB711370C364BE0FD58829CF295F8F2C07BFBFDA04A9B79E427828954C6DDE109FE4AD48FB17D0EE96EEC578214BBF5C074417F3FD9D2EBF143AF6178633F1B5C550B53BFE5AFA931A0F0C75A2C5FB167CBA0EB8B4CE8F339952D7696C56924BA5D390A0F5F7E758FE5791844B79792CA5D236F11E3A46D43E74DC4232C0648AE0BA01881A9FAC3E092E6D14B672F4A885C66582105474901F79B47BA711E2DA8CEC9B66ED7FE2ADD5AC8A579B32F66382A0C016D9028A26B75843A7B216BFDBA5E513164D8643FD1EFDB1C2AAA6F2D9DA924CD9A7593423FEBB12206845EDF4F72A4A3FF89FB87CC713BD167F9C3
3DDA46C0D0039178E53C94FE0904BF59A7EC6D52DF33F10EAA4F02D20AA805633398E511D37C6480474438E1DB4C2F1682716635E4406095BE0BD12BDEFF55CB10C1EE8BAC04EDF3E795A565CC6FB97AD9FCBCE3A2A71E2AFBD99384FFB6F1CC0F92FBF1BECD336848DCBBCD1AE6270935A7F819632958B73443E31DBC4019849B704146691B23E9DCCCF86D6C0C5B86112C5D40FAF4A17C944ADD888C04296DCEB04F4329597E5139EAFB3350DF6429C45AB08FB5A914BB596CF04EE92EAAB97646618204548C935E70F9CA873BCDCF61394CF187D6F7CD4782BBEC03AB4C968E3C88BB2159C48DED25E2645D4EF202564BC4A138A1D244A65F0FFB7902E697E00DAE4BD095C4B11D89B153DDCBCEAEC0B15FEA0DF2956E2A99AD71086042A607061AE24AC58BA3FD3297BB11678C7A1CAE3D0913F839DA1FFD40C2AB2A5AC29F787687547003E3419066FE5891DC92EA998529C8731F1AEE8F426F9C08CD07EF92702539140E01EE9C791520E8EFCEA4C8C3E9E135F0B77E24AB6989C5792505DCA2AFC72B37002921DFADD55AA37CE18B2CC64D331BA1CC17F9A2F7E4F216B67914DB0C2DE7160B7CC77815E129180BD6F610A27006EAF148F83710AB82864187AB37DD0B1D10235E4EBFEC676D35C82C6E46DE5835836A6ADE83B4C9E42138A60F291BB1B63D7800E7C2799F98A8B11815A7765DCF5405B71621EBED123458C8A81E23A79030B80ECE79F62E3881D8F8FFCA79F3B0321834A5A47CAD695FB435353C183D4D15AF559CB4A35BAB8695A44E08AD781E2082441F5B6027D44DDFB07E7078C606D257D3269AFBE7ACFF0031007FA2A1F768B39819EF51046CD2FEBA49B81ADAC3A835558E4C66440747915F8E9B6185299F9353EF7457D9CB149DCAE588F76CF6586E7CF687DAF6AC7578AEED646568E45441F05AC53C6C3D4364A59743D8D2BE80CFCC8807FF04841E5EACDF301F2E600B0AA50F8ADED0FD1BA4ECAC0EF7C49214A4E696C706D58B9B27F29F29DA859ED5EF1ADD16D0BB2E88A8C84F56F8694DE9B973C4F890064705A6C8AFD6246DB9A9982F97EBFF166F07694DD8B2511F8467BB330E79264A04ED3DBEAAED6F1BCEEB1796B3D3799174AE2E6145F12AE278D9E6D6A83145027A218F24F7D6BBA28CCCF772B67F29EE7053BB759F34A4D36D8CF01BBE274A46A25D8614A1E8A2E6CB74E12ABEED7B3A51657C3E79A59C84847CDEBF02ED9C2D9AA4C5952228EE9B1D1DBB5F2728B21A51A752F1A4939A9248C77F873968AE8A75322E032C86742B3ECBAF5B18B140CF20899C37259AC83E13639779D03D839C495FC25C74231DD82EC9951CF1FC0E86F5C6187A09283D1A14EB6536DF8127F19440BB9B158BCBF598B5F29E250897332930DF69A5EE54ED7B25E3A4556E7C6A05F821D7AACA446135C11330D2FFC5A1731E
C5D63E867F1C02FA80C46B96D065106496C27F68F39B155B4B78A55221EF133F569498D50D9A280F8416A2A49BBE56C13B1266055B230BCA1B0AB0B3738ADA003A4CE827F515BE6B54B0BA651094A792DF5019EA98EFF70020D1CB58F814D2CD5146474CC0F06D229AFC69F429345631F114608D1FFA1D23AA4715DF0EF7A2968C2B876CD056B71C06C5983B716684AD963E498EBFA60A47DF9FCE40B97E552EE13D8480A3265BEE882C00C02E08EDCD57562A2F4417FFDED0ED2B0FBCA624A6E386D5167D4499CE966464C7BD06CF750FFC3BC9F65CB41C84F94AE0D361C495F8957C69F47B92ECFA63E6B5E2A9A4DEA0D49698998BCD1758786F47879D4B8598C5FE8A2A680D424A622CB450B09F20846E68A85A788AA598613483989786B876BED90DDC234E75F82ACED2C6DA87D302ECAD16ACAF75254E2670CECCC5185B1268C9D60E4BF25301B4C9607E36478A4C0913248BB95C863190F77122DFEE6D3B5D1B0E8A486DF5AE052561E38720E5CFA7123D70C6D656EEB349E395CD1D888AE7516E2BCA2DC988D4E8BFC83E3B287860253DA560E11F9150F4C1A2EF7F54F68A4BE090DD444B1330CD45ADB280D6912327A3BE1FAF3687A6BDE8CE38C2027666C44C5D59EBC5A25ABEDC699431A7CF4CB51BC67975CA480AE3FA3321793343C09C3A3C5257247348CA0E3ECFC5D6408153FBE996FD6E0721677A262546DA4C3CED997F3BE61C6957FF533CD701EA2B93CEBC496825D9D47588917EA46A5DD87D4B521CD0D66430A30123B9290726A831A259D4D2617CEBF279206CBF45A737411F7A57C1C4352C29BF4C717D3227BD25FA319840C670137B4214DB4759D4E0688C6DD2E2580E56A980D62C3D1C0895A98E0860B6AD3AEAC1E60BF9EFAC49D2EDF43E1EE4EE06569F4096B22D362C80BFB2EA40253369182926470BF9F2AD680B394E29B632762FC3FDEA164D3319CCBC51EF4653DE9270487AA48BD840FE0A79781474F955A4B597BFABB7CCCE78E165F3FAB478BC9A1148DD7905F8E631A9148C520E067C16E029D3FCABABB74F231CFD04BE5D3925D0FE749BFD5CF2A2606ECEB17E42E2312040691FCBDC139927007F61F62711C1A3BC75E96635E94AE8FFA1766AB8CD408EA95E8A8C1A7124EE83AF81215AD06CC838B245054FCC1A3640C096C4D4858718045896EF0E5B4D0F04451D9DC6A3B615E1DDA8582E0E49DF07948771E5ADAF476B978EEFAAFD67A60333C75C5EE532866391CFF0255F832BCE04237C91DFCB127E35160D9EDD6F876416FFE5C2C01DCE012EDDB71C736C5525560B2D69CA2C5706F72F2E0A05EF54ACCDF142B3F1016FBBDE41BA592878B3FE3A2C160AA38E6A3E48F0569C5E9D404156F8204D28BCB01D7E7DE06A4C3611B5286AA714FAA10E41BA61CE6DA66DBE0E6FB7E19A4D20FE41FC3D570E67EB

4C2D1366E26FD660C2DEB0C303F9373B80DCBDD0D8FE3599FA5215BDE65E067A8AC8D5DF13128EFD225D64D3EDE82933C9DC02F5FCEA1AC89D5041851C6580C76C381F7456A747FD1FC0FCD40687DA915F85EE9218B068EFFA9E87D57B87A766368DA76CD285465716BCB837F9DC150CC98C380369EFCDB5401AC9F72A34C4BA11
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/IBHDBR+LucidaGrande cguidfix
/F1.1/IBHDBR+LucidaGrande renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
0.60000002 i
q
0 0 825 334 rc
1 0 0 -1 0 336 cm
/F1.1[ 144 0 0 -144 0 0]sf
0 139 m
(!"#$%#&"&'\()[ 93.152813 81.973125 82.887188 47.379375 35.145000 82.887188 82.887188 81.973125 82.887187 66.926250 0.000000 ] xS
0 308 m
(\)*$%+%,-$%"#)[ 105.387187 84.152812 47.379375 35.145000 127.957500 35.145000 76.066875 73.043438 47.379375 35.145000 81.973125 0.000000 ] xS
0 0 0 sc
/F1.1[ 12 0 0 -12 0 0]sf
0 12 m
(\)*$%+%,.\(/"0.1'\(2%$3\(4567\(8..09-:;)[ 2.842266 1.072734 -1.991719 -1.923281 3.635156 -3.011250 0.398906 0.205547 -1.228359 2.401172 0.891094 1.072734 0.205547 -3.011250 -0.362813 -1.196484 1.279453 -1.279453 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 ] xS
ep
end
